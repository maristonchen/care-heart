<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 因为spring的context是父子容器，所以会产生冲突，Controller会先进行扫描装配， 而此时的Service还没有进行事务的增强处理，
得到的将是原样的Service（没有经过事务加强处理，故而没有事务处理能力）最后才是applicationContext.xml中的扫描配置进行事务处理 -->

    <context:component-scan base-package="com.biocare.*">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <!-- 定义HandlerMapping,支持RequestMapping注解标记涵盖了HanlderMapping组件-->
    <mvc:annotation-driven conversion-service="customConversionService">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8"/>
            </bean>
            <ref bean="fastJsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:default-servlet-handler/>
    <!--拦截器-->
<!--    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/access/**"/>
            <mvc:mapping path="/notice/**"/>
            <mvc:mapping path="/oper/**"/>
            <mvc:mapping path="/ticket/**"/>
            <mvc:mapping path="/refund/**"/>
            <mvc:mapping path="/task/**"/>
            <mvc:mapping path="/out/**"/>
            <mvc:mapping path="/third/**"/>
            <mvc:mapping path="/b2b/**"/>
            <mvc:mapping path="/pay/**"/>
            <mvc:mapping path="/dic/**"/>
            <mvc:mapping path="/user/**"/>
            <mvc:mapping path="/role/**"/>
            <mvc:mapping path="/menu/**"/>
            <mvc:exclude-mapping path="/login/**"/>
            <bean class="com.shenzhenair.manager.interceptor.LoginInterceptor">
                <property name="redisApi" ref="redisApi"/>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>-->

    <!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->
    <!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->
    <!--<mvc:resources location="/common/" mapping="/common/**"/>-->
    <!--<mvc:resources location="/css/" mapping="/css/**"/>-->
    <!--<mvc:resources location="/frame/" mapping="/frame/**"/>-->
    <!--<mvc:resources location="/image/" mapping="/image/**"/>-->
    <!--<mvc:resources location="/images/" mapping="/images/**"/>-->
    <!--<mvc:resources location="/js/" mapping="/js/**"/>-->
    <!--<mvc:resources location="/layer/" mapping="/layer/**"/>-->
    <!--<mvc:resources location="/ztree/" mapping="/ztree/**"/>-->

    <!-- mvc:view-controller可以在不需要Controller处理request的情况，转向到设置的View -->
    <!-- 像下面这样设置，如果请求为/，则不通过controller，而直接解析为/index.jsp -->
    <!--<mvc:view-controller path="/" view-name="login"/>-->

    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <property name="fastJsonConfig" >
            <bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
                <property name="serializerFeatures">
                    <list>
                        <value>WriteMapNullValue</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="customConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.biocare.platform.config.DateConverter"/>
            </set>
        </property>
    </bean>

    <!-- 支持返回json -->

    <!-- 对模型视图添加前后缀 -->
    <!--    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
              p:prefix="/WEB-INF/pages/" p:suffix=".jsp"
              p:viewClass="org.springframework.web.servlet.view.JstlView"/>-->

    <!-- 全局异常解析器 -->
    <bean id="exceptionResolver" class="com.biocare.common.exception.GlobalExceptionResolver"/>

    <!-- 配置springMVC处理上传文件的信息 -->
    <!--   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
           <property name="defaultEncoding" value="utf-8"/>
           <property name="maxUploadSize" value="10485760000"/>
           <property name="maxInMemorySize" value="40960"/>
       </bean>-->

</beans>
